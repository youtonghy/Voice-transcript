{
  "name": "Voice-Transcript-Translate",
  "version": "0.2.2",
  "description": "Voice transcription and translation desktop app",
  "author": {
    "name": "youtonghy",
    "email": "hi@youtonghy.com",
    "url": "https://youtonghy.com"
  },
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "dev": "electron . --dev",
    "build": "electron-builder",
    "dist:win": "npm run build:py:win && electron-builder --win",
    "kill:pyexe": "node scripts/kill-python-exes.js",
    "build:py:transcribe": ".venv\\Scripts\\python.exe -m nuitka --onefile --windows-console-mode=disable --include-module=modles --output-dir=dist-python\\win --output-filename=transcribe_service.exe transcribe_service.py",
    "build:py:media": ".venv\\Scripts\\python.exe -m nuitka --onefile --windows-console-mode=disable --include-module=modles --include-data-files=ffmpeg.exe=ffmpeg\\ffmpeg.exe --output-dir=dist-python\\win --output-filename=media_transcribe.exe media_transcribe.py",
    "build:py:win": "npm run build:py:transcribe && npm run build:py:media && npm run copy:runtime",
    "build:py:transcribe:linux": "python3 -m nuitka --onefile --disable-console --include-module=modles --output-dir=dist-python/linux --output-filename=transcribe_service transcribe_service.py",
    "build:py:media:linux": "python3 -m nuitka --onefile --disable-console --include-module=modles --output-dir=dist-python/linux --output-filename=media_transcribe media_transcribe.py",
    "build:py:linux": "npm run build:py:transcribe:linux && npm run build:py:media:linux && npm run copy:runtime:linux",
    "build:pyi:transcribe": ".venv\\Scripts\\python.exe -m PyInstaller --noconfirm --onefile --name transcribe_service --hidden-import modles --distpath dist-python\\win --workpath dist-python\\build --clean --noconsole transcribe_service.py",
    "build:pyi:media": ".venv\\Scripts\\python.exe -m PyInstaller --noconfirm --onefile --name media_transcribe --hidden-import modles --distpath dist-python\\win --workpath dist-python\\build --clean --noconsole media_transcribe.py",
    "copy:runtime": "node scripts/copy-runtime.js dist-python/win",
    "copy:runtime:linux": "node scripts/copy-runtime.js dist-python/linux",
    "dist:linux": "npm run build:py:linux && electron-builder --linux",
    "build:pyi:win": "npm run build:pyi:transcribe && npm run build:pyi:media && npm run copy:runtime"
  },
  "devDependencies": {
    "electron": "^37.3.1",
    "electron-builder": "^24.13.3"
  },
  "build": {
    "appId": "com.voice.transcript",
    "productName": "Voice Transcript",
    "icon": "assets/icons/icon.ico",
    "asar": true,
    "files": [
      "index.html",
      "main.js",
      "preload.js",
      "renderer.js",
      "settings.html",
      "settings.js",
      "media-transcribe.html",
      "media-transcribe-renderer.js",
      "voice-input.html",
      "voice-input.js",
      "package.json",
      "assets/**/*",
      "i18n.js",
      "locales/**/*"
    ],
    "extraResources": [
      {
        "from": "dist-python/${os}",
        "to": "python",
        "filter": [
          "transcribe_service",
          "transcribe_service.exe",
          "media_transcribe",
          "media_transcribe.exe"
        ]
      },
      {
        "from": ".",
        "to": "python",
        "filter": [
          "ffmpeg",
          "ffmpeg.exe"
        ]
      }
    ],
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "deb"
      ],
      "category": "AudioVideo",
      "icon": "assets/icons/icon.png"
    },
    "nsis": {
      "oneClick": false,
      "perMachine": false,
      "allowToChangeInstallationDirectory": true
    }
  }
}
